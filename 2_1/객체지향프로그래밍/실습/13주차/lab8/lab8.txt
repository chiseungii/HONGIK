Programming Practice 8

- Inheritance와 가상함수에 대한 다음 실습을 진행하시오.
	Base class: Account (은행계좌)
		멤버 변수
			double balance;

		멤버 함수
			생성자 Account(); // 0으로 초기화, 기본 생성자가 호출되었음을 출력
			생성자 Account(double d); // d로 초기화, (int) 생성자가 호출되었음을 출력
			소멸자 ~Account(); // 소멸자가 호출되었음을 출력
			virtual double GetBalance(); // balance return
			virtual void PrintBalance(); // “Error. Balance not available for base type\n” 출력

- 파생 클래스 CheckingAccount 작성
	멤버 함수
		CheckingAccount(double d) : Account(d) {}
		void PrintBalance();
			// “Checking account balance: ” + balance 값 + “\n” 출력
			// balance 값은 기본 클래스의 멤버 함수를 사용하여 가져올 것

- 파생 클래스 SavingAccount 작성
	멤버 함수
		SavingAccount(double d) : Account(d) {}
		void PrintBalance();
			// “Savings account balance : ” + balance 값 + “\n” 출력
			// balance 값은 기본 클래스의 멤버 함수를 사용하여 가져올 것

1. main() 함수 테스트
	int main() {
		// Create objects of type CheckingAccount and SavingsAccount.
		CheckingAccount *pChecking = new CheckingAccount(100.00);
		SavingsAccount *pSavings = new SavingsAccount(1000.00);

		// Call PrintBalance using a pointer to Account.
		Account *pAccount = pChecking;
		pAccount->PrintBalance();

		// Call PrintBalance using a pointer to Account.
		pAccount = pSavings;
		pAccount->PrintBalance();
	}
